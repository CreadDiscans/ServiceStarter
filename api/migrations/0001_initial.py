# Generated by Django 2.2.10 on 2020-02-21 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('readonly', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '게시판 그룹',
            },
        ),
        migrations.CreateModel(
            name='BoardItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('content', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('valid', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '게시판 글',
            },
        ),
        migrations.CreateModel(
            name='MonitorCpu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MonitorMemory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MonitorServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('keep_day', models.IntegerField(default=7)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profile_img', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '사용자',
            },
        ),
        migrations.CreateModel(
            name='ShopCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isOpen', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': '상점 장바구니',
            },
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('valid', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': '상점 상품',
            },
        ),
        migrations.CreateModel(
            name='ShopSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('valid', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '상점 구독',
            },
        ),
        migrations.CreateModel(
            name='TaskWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField(default=0)),
                ('status', models.CharField(max_length=100)),
                ('body', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='TaskClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=100)),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.TaskWork')),
            ],
        ),
        migrations.CreateModel(
            name='ShopPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imp_uid', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('vbank', models.CharField(blank=True, max_length=100, null=True)),
                ('cart', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ShopCart')),
            ],
            options={
                'verbose_name_plural': '상점 결재내역',
            },
        ),
        migrations.AddField(
            model_name='shopcart',
            name='product',
            field=models.ManyToManyField(blank=True, to='api.ShopProduct'),
        ),
        migrations.AddField(
            model_name='shopcart',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile'),
        ),
        migrations.CreateModel(
            name='ShopCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('customer_uid', models.CharField(max_length=100)),
                ('buyer_name', models.CharField(max_length=100)),
                ('buyer_email', models.CharField(max_length=100)),
                ('buyer_tel', models.CharField(max_length=100)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
            ],
            options={
                'verbose_name_plural': '상점 구독카드',
            },
        ),
        migrations.CreateModel(
            name='ShopBilling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expired', models.DateTimeField()),
                ('scheduled', models.BooleanField(default=False)),
                ('imp_uid', models.CharField(max_length=100)),
                ('merchant_uid', models.CharField(max_length=100)),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ShopCard')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ShopSubscription')),
            ],
            options={
                'verbose_name_plural': '상점 구독내역',
            },
        ),
        migrations.CreateModel(
            name='MonitorUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dt', models.DateTimeField(auto_now_add=True)),
                ('cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.MonitorCpu')),
                ('memory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.MonitorMemory')),
            ],
        ),
        migrations.AddField(
            model_name='monitormemory',
            name='server',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.MonitorServer'),
        ),
        migrations.AddField(
            model_name='monitorcpu',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.MonitorServer'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='%Y/%m/%d')),
                ('extra', models.CharField(blank=True, max_length=100, null=True)),
                ('boarditem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.BoardItem')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
                ('shopproduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ShopProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcm_token', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=100)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ManyToManyField(to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ChatRoom')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='boarditem',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile'),
        ),
        migrations.AddField(
            model_name='boarditem',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BoardGroup'),
        ),
        migrations.CreateModel(
            name='BoardComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BoardItem')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.BoardComment')),
            ],
            options={
                'verbose_name_plural': '게시판 댓글',
            },
        ),
    ]
